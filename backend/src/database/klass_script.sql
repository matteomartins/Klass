-- MySQL Script generated by MySQL Workbench
-- Tue Jul 28 17:31:45 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema klass
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `klass` ;

-- -----------------------------------------------------
-- Schema klass
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `klass` DEFAULT CHARACTER SET utf8 ;
USE `klass` ;

-- -----------------------------------------------------
-- Table `klass`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Usuario` (
  `idUsuario` INT NOT NULL AUTO_INCREMENT,
  `nomeUsuario` VARCHAR(45) NOT NULL,
  `dataNascimento` DATE NOT NULL,
  `email` VARCHAR(70) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `iconUsuario` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`idUsuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `klass`.`Escola`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Escola` (
  `idEscola` INT NOT NULL,
  `nomeEscola` VARCHAR(70) NOT NULL,
  `descricao` TEXT NOT NULL,
  `periodoLetivo` INT NOT NULL,
  `iconEscola` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`idEscola`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `klass`.`Turno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Turno` (
  `idTurno` INT NOT NULL AUTO_INCREMENT,
  `idEscola` INT NOT NULL,
  `nomeTurno` VARCHAR(45) NOT NULL,
  `Periodo` VARCHAR(45) NOT NULL,
  `flg_Domingo` BIT NOT NULL,
  `flg_Segunda` BIT NOT NULL,
  `flg_Terca` BIT NOT NULL,
  `flg_Quarta` BIT NOT NULL,
  `flg_Quinta` BIT NOT NULL,
  `flg_Sexta` BIT NOT NULL,
  `flg_Sabado` BIT NOT NULL,
  PRIMARY KEY (`idTurno`),
  CONSTRAINT `fk_EscolaTurno`
    FOREIGN KEY (`idEscola`)
    REFERENCES `klass`.`Escola` (`idEscola`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`Horarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Horarios` (
  `idHorarios` INT NOT NULL AUTO_INCREMENT,
  `idTurno` INT NOT NULL,
  `diaHorario` VARCHAR(7) NOT NULL,
  `inicioHorario` TIME NOT NULL,
  `fimHorario` TIME NOT NULL,
  PRIMARY KEY (`idHorarios`),
  CONSTRAINT `fk_TurnoHorario`
    FOREIGN KEY (`idTurno`)
    REFERENCES `klass`.`Turno` (`idTurno`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`Materia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Materia` (
  `idMateria` INT NOT NULL AUTO_INCREMENT,
  `nomeMateria` VARCHAR(45) NOT NULL,
  `abreviacao` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idMateria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `klass`.`Professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Professor` (
  `idProfessor` INT NOT NULL AUTO_INCREMENT,
  `nomeProfessor` VARCHAR(45) NOT NULL,
  `emailProf` VARCHAR(70) NOT NULL,
  `dataContratacao` DATE NOT NULL,
  `titulacao` VARCHAR(30) NULL,
  `ponto` INT NULL,
  PRIMARY KEY (`idProfessor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `klass`.`DiasDisponivel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`DiasDisponivel` (
  `idDiasDisponivel` INT NOT NULL AUTO_INCREMENT,
  `idProfessor` INT NOT NULL,
  `diaProf` VARCHAR(45) NOT NULL,
  `inicioHora` TIME NOT NULL,
  `fimHora` TIME NOT NULL,
  PRIMARY KEY (`idDiasDisponivel`),
  CONSTRAINT `fk_DiaProf`
    FOREIGN KEY (`idProfessor`)
    REFERENCES `klass`.`Professor` (`idProfessor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`Curso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Curso` (
  `idCurso` INT NOT NULL AUTO_INCREMENT,
  `idEscola` INT NOT NULL,
  `nomeCurso` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`idCurso`),
  CONSTRAINT `fk_EscolaCurso`
    FOREIGN KEY (`idEscola`)
    REFERENCES `klass`.`Escola` (`idEscola`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`Modulo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Modulo` (
  `idModulo` INT NOT NULL AUTO_INCREMENT,
  `idCurso` INT NOT NULL,
  `nivelModulo` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idModulo`),
  CONSTRAINT `fk_CursoModulo`
    FOREIGN KEY (`idCurso`)
    REFERENCES `klass`.`Curso` (`idCurso`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`Turma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Turma` (
  `idTurma` INT NOT NULL AUTO_INCREMENT,
  `idTurno` INT NOT NULL,
  `idModulo` INT NOT NULL,
  `nomeTurma` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTurma`),
  CONSTRAINT `fk_TurnoTurma`
    FOREIGN KEY (`idTurno`)
    REFERENCES `klass`.`Turno` (`idTurno`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ModuloTurma`
    FOREIGN KEY (`idModulo`)
    REFERENCES `klass`.`Modulo` (`idModulo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`Aula`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Aula` (
  `idAula` INT NOT NULL AUTO_INCREMENT,
  `idTurma` INT NOT NULL,
  `idMateria` INT NOT NULL,
  PRIMARY KEY (`idAula`),
  CONSTRAINT `fk_AulaTurma`
    FOREIGN KEY (`idTurma`)
    REFERENCES `klass`.`Turma` (`idTurma`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_AulaMateria`
    FOREIGN KEY (`idMateria`)
    REFERENCES `klass`.`Materia` (`idMateria`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `klass`.`Relatorio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Relatorio` (
  `idRelatorio` INT NOT NULL AUTO_INCREMENT,
  `idEscola` INT NOT NULL,
  `idUsuario` INT NOT NULL,
  `tipoRelatorio` VARCHAR(45) NOT NULL,
  `conteudo` TEXT NOT NULL,
  `dataEmissao` DATE NOT NULL,
  PRIMARY KEY (`idRelatorio`),
  CONSTRAINT `fk_RelatorioEscola`
    FOREIGN KEY (`idEscola`)
    REFERENCES `klass`.`Escola` (`idEscola`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_RelatorioUsuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `klass`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`Notificacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Notificacao` (
  `idNotificacao` INT NOT NULL AUTO_INCREMENT,
  `idEscola` INT NOT NULL,
  `idUsuario` INT NOT NULL,
  `texto` TEXT NOT NULL,
  PRIMARY KEY (`idNotificacao`),
  CONSTRAINT `fk_NotificaEscola`
    FOREIGN KEY (`idEscola`)
    REFERENCES `klass`.`Escola` (`idEscola`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_NotificaUsuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `klass`.`Usuario` (`idUsuario`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`Visualizacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Visualizacao` (
  `idEscola` INT NOT NULL,
  `idUsuario` INT NOT NULL,
  CONSTRAINT `fk_ViewEscola`
    FOREIGN KEY (`idEscola`)
    REFERENCES `klass`.`Escola` (`idEscola`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ViewUsuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `klass`.`Usuario` (`idUsuario`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`EscolaProfessor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`EscolaProfessor` (
  `idEscola` INT NOT NULL,
  `idProfessor` INT NOT NULL,
  CONSTRAINT `fk_EscolaProf`
    FOREIGN KEY (`idEscola`)
    REFERENCES `klass`.`Escola` (`idEscola`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ProfEscola`
    FOREIGN KEY (`idProfessor`)
    REFERENCES `klass`.`Professor` (`idProfessor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`MateriaProfessor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`MateriaProfessor` (
  `idMateria` INT NOT NULL,
  `idProfessor` INT NOT NULL,
  CONSTRAINT `fk_MateriaProfessor`
    FOREIGN KEY (`idMateria`)
    REFERENCES `klass`.`Materia` (`idMateria`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ProfessorMateria`
    FOREIGN KEY (`idProfessor`)
    REFERENCES `klass`.`Professor` (`idProfessor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`Aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Aluno` (
  `idUsuario` INT NOT NULL,
  `idTurma` INT NOT NULL,
  CONSTRAINT `fk_UsuarioTurma`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `klass`.`Usuario` (`idUsuario`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_TurmaUsuario`
    FOREIGN KEY (`idTurma`)
    REFERENCES `klass`.`Turma` (`idTurma`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`AulaProfessor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`AulaProfessor` (
  `idAula` INT NOT NULL,
  `idProfessor` INT NOT NULL,
  CONSTRAINT `fk_AulaProf`
    FOREIGN KEY (`idAula`)
    REFERENCES `klass`.`Aula` (`idAula`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ProfAula`
    FOREIGN KEY (`idProfessor`)
    REFERENCES `klass`.`Professor` (`idProfessor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`AulaHorario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`AulaHorario` (
  `idAula` INT NOT NULL,
  `idHorario` INT NOT NULL,
  CONSTRAINT `fk_AulaHorario`
    FOREIGN KEY (`idAula`)
    REFERENCES `klass`.`Aula` (`idAula`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_HorarioAula`
    FOREIGN KEY (`idHorario`)
    REFERENCES `klass`.`Horarios` (`idHorarios`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `klass`.`BaseMaterias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`BaseMaterias` (
  `idMateria` INT NOT NULL,
  `idModulo` INT NOT NULL,
  `totalAulas` INT NOT NULL,
  CONSTRAINT `fk_MateriaMod`
    FOREIGN KEY (`idMateria`)
    REFERENCES `klass`.`Materia` (`idMateria`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ModMateria`
    FOREIGN KEY (`idModulo`)
    REFERENCES `klass`.`Modulo` (`idModulo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `klass`.`Administrador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`Administrador` (
  `idAdministrador` INT NOT NULL AUTO_INCREMENT,
  `idEscola` INT NOT NULL,
  `idUsuario` INT NOT NULL,
  PRIMARY KEY (`idAdministrador`),
  CONSTRAINT `fk_AdmEscola`
    FOREIGN KEY (`idEscola`)
    REFERENCES `klass`.`Escola` (`idEscola`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AdmUsuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `klass`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


USE `klass` ;

-- -----------------------------------------------------
-- Placeholder table for view `klass`.`MateriaTurma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`MateriaTurma` (`Turma` INT, `Materia` INT, `Aulas` INT);

-- -----------------------------------------------------
-- Placeholder table for view `klass`.`GradeHoraria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `klass`.`GradeHoraria` (`Dia` INT, `Inicio` INT, `Fim` INT, `Materia` INT, `Professor` INT);

-- -----------------------------------------------------
-- View `klass`.`MateriaTurma`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `klass`.`MateriaTurma`;
USE `klass`;
CREATE  OR REPLACE VIEW `MateriaTurma` AS
SELECT t.idTurma Turma, m.idMateria Materia, bm.totalAulas Aulas FROM Turma t
INNER JOIN Modulo md on md.idModulo = t.idModulo
INNER JOIN BaseMaterias bm on bm.idModulo = md.idModulo
INNER JOIN Materia m on m.idMateria = bm.idMateria
ORDER BY t.nomeTurma;

-- -----------------------------------------------------
-- View `klass`.`GradeHoraria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `klass`.`GradeHoraria`;
USE `klass`;
CREATE  OR REPLACE VIEW `GradeHoraria` AS
select h.diaHorario Dia, h.inicioHorario Inicio, h.fimHorario Fim, m.abreviacao Materia, p.nomeProfessor Professor from aulahorario ah
inner join horarios h on h.idHorarios = ah.idHorario
inner join aula a on a.idAula = ah.idAula
inner join materia m on m.idMateria = a.idMateria
inner join aulaprofessor ap on ap.idAula = a.idAula
inner join professor p on p.idProfessor = ap.idProfessor
order by h.idHorarios;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
